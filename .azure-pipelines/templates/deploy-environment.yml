parameters:
- name: azureSubscription
  type: string
- name: environment
  type: string
- name: environmentName
  type: string
- name: environmentTag
  type: string


stages:
- stage: Deploy${{ parameters.environmentName }}

  jobs:
  - deployment: Deploy${{ parameters.environmentName }}PlatformKeyVaultBicep
    environment: ${{ parameters.environment }}

    workspace:
      clean: all

    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self

            - task: AzureCLI@2
              displayName: Deploy${{ parameters.environmentName }}PlatformKeyVaultBicep
              inputs:
                azureSubscription: ${{ parameters.azureSubscription }}
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  if ($null -eq (az keyvault show --name 'kv-mx-pltfrm-${{ parameters.environmentTag }}-uksouth')) { $platformKeyVaultCreateMode = 'default' } else { $platformKeyVaultCreateMode = 'recover' }
                  if ($null -eq (az keyvault show --name 'kv-mx-nuget-${{ parameters.environmentTag }}-uksouth')) { $nugetKeyVaultCreateMode = 'default' } else { $nugetKeyVaultCreateMode = 'recover' }

                  az deployment sub create `
                    --name 'strategicKeyVault${{ parameters.environmentName }}' `
                    --template-file bicep/platformKeyVault.bicep `
                    --location 'uksouth' `
                    --parameters @params/platformKeyVault.${{ parameters.environmentTag }}.json `
                      parPlatformKeyVaultCreateMode=$platformKeyVaultCreateMode `
                      parNugetKeyVaultCreateMode=$nugetKeyVaultCreateMode

  - job: Execute${{ parameters.environmentName }}PlatformKeyVaultScripts
    dependsOn: ['Deploy${{ parameters.environmentName }}PlatformKeyVaultBicep']

    workspace:
      clean: all

    steps:
      - checkout: self

      - task: AzureCLI@2
        displayName: SetSqlServerAdminCredentials
        inputs:
          azureSubscription: ${{ parameters.azureSubscription }}
          scriptType: 'pscore'
          scriptLocation: 'scriptPath'
          arguments: '"${{ parameters.environmentTag }}" "uksouth"'
          addSpnToEnvironment: true
          scriptPath: '$(Build.sourcesDirectory)/.azure-pipelines/scripts/SetSqlServerAdminCredentials.ps1'

      - task: AzureCLI@2
        displayName: CreateDatabaseAADGroups
        inputs:
          azureSubscription: ${{ parameters.azureSubscription }}
          scriptType: 'pscore'
          scriptLocation: 'scriptPath'
          arguments: '"${{ parameters.environmentTag }}"'
          addSpnToEnvironment: true
          scriptPath: '$(Build.sourcesDirectory)/.azure-pipelines/scripts/CreateDatabaseAADGroups.ps1'

  - deployment: Deploy${{ parameters.environmentName }}PlatformBicep
    dependsOn: ['Execute${{ parameters.environmentName }}PlatformKeyVaultScripts']
    environment: ${{ parameters.environment }}

    workspace:
      clean: all

    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self

            - task: AzureCLI@2
              displayName: Deploy${{ parameters.environmentName }}ServicesBicep
              inputs:
                azureSubscription: ${{ parameters.azureSubscription }}
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  $sqlAdminOid = (az ad group show --group "sg-sql-platform-${{ parameters.environmentTag }}-admins" --query 'id')  | ConvertFrom-Json

                  az deployment sub create `
                    --name 'strategicPlatform${{ parameters.environmentName }}' `
                    --template-file bicep/platform.bicep `
                    --location 'uksouth' `
                    --parameters @params/platform.${{ parameters.environmentTag }}.json `
                      parSqlAdminOid=$sqlAdminOid
